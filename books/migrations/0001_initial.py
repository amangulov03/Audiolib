# Generated by Django 5.2.5 on 2025-08-20 16:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("author", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("published_date", models.DateField(blank=True, null=True)),
                (
                    "format_type",
                    models.CharField(
                        choices=[
                            ("ebook", "Электронная книга (PDF/EPUB)"),
                            ("audio", "Аудиокнига (MP3)"),
                        ],
                        default="ebook",
                        max_length=10,
                    ),
                ),
                ("file", models.FileField(blank=True, null=True, upload_to="books/")),
                (
                    "cover_image",
                    models.ImageField(blank=True, null=True, upload_to="covers/"),
                ),
                (
                    "genres",
                    models.ManyToManyField(related_name="books", to="books.genre"),
                ),
            ],
        ),
    ]
